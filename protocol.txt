https://docs.nats.io/reference/reference-protocols/nats-protocol
https://beta-docs.nats.io/ref/protocols/jetstream ???

Only PUB, MSG, HPUB, and HMSG include payloads.

Field Delimiters: 
    The fields of NATS protocol messages are delimited by 
    whitespace characters (space) or (tab). 
    Multiple whitespace characters will be treated as a single
    field delimiter.

Newlines: 
    NATS uses ␍ followed by ␊ (␍␊, 0x0D0A) to terminate protocol
    messages. This newline sequence is also used to mark the end 
    of the message payload in PUB, MSG, HPUB, and HMSG protocol messages.

Subject names: 
    Subject names, including reply subject names, are case-sensitive and 
    must be non-empty alphanumeric strings with no embedded whitespace. 
    All UTF-8 characters except spaces/tabs and separators which are . and > are allowed.
    Subject names can be optionally token-delimited using the dot character (.), e.g.:

    FOO, BAR, foo.bar, foo.BAR, FOO.BAR and FOO.BAR.BAZ are all valid subject names
    FOO. BAR, foo. .bar andfoo..bar are not valid subject names    

Subscription identifier (sid):
    A unique alphanumeric subscription ID, generated by the client

NATS Message Headers
    https://github.com/nats-io/nats-architecture-and-design/blob/main/adr/ADR-4.md

Without payloads    
    INFO        Server  Sent to client after initial TCP/IP connection

                        INFO {"option_name":option_value,...}␍␊
                        
                        INFO {"server_id":"NAURQFRTEZMTT6LIZKVUP7RBHEPD36NAYYTM6DBTLN5UJ4HZOHLI5IUZ","server_name":"NAURQFRTEZMTT6LIZKVUP7RBHEPD36NAYYTM6DBTLN5UJ4HZOHLI5IUZ","version":"2.10.24","proto":1,"git_commit":"1d6f7ea","go":"go1.23.4","host":"0.0.0.0","port":4222,"headers":true,"max_payload":1048576,"jetstream":true,"client_id":6,"client_ip":"172.18.0.1","xkey":"XBQCKF4GTDYB2RKF5EO4XEAW2NLCDYOCHPLAEFGTLTOOPYXM4TWRKU5E"} 
                        
                        INFO 
                            {
                                "server_id":"NBKGIX5B7HTLWXJLNR7QHFPXFCY3S33WJF7QIZLGB75KW2HNQFBNKE2F",
                                "server_name":"NBKGIX5B7HTLWXJLNR7QHFPXFCY3S33WJF7QIZLGB75KW2HNQFBNKE2F",
                                "version":"2.10.24",
                                "proto":1,
                                "git_commit":"1d6f7ea",
                                "go":"go1.23.4",
                                "host":"0.0.0.0",
                                "port":4222,
                                "headers":true,
                                "max_payload":1048576,
                                "jetstream":true,
                                "client_id":5,
                                "client_ip":"172.18.0.1",
                                "xkey":"XBPECVCORYF4FBGNQYMCDY6MDAARYABTXXCULAWNOMPRUNYWXFWUZKLQ"
                            }
                            ␍␊
                
    CONNECT     Client  Sent to server to specify connection information

                        CONNECT {"option_name":option_value,...}␍␊
        
                        CONNECT 
                            {
                                "verbose":false,
                                "pedantic":false,
                                "tls_required":false,
                                "name":"",
                                "lang":"go",
                                "version":"1.2.2",
                                "protocol":1
                            }
                            ␍␊
    
    SUB         Client  Subscribe to a subject (or subject wildcard)

                        SUB <subject> [queue group] <sid>␍␊
                        
                        SUB FOO 1␍␊
                        
                        SUB BAR G1 44␍␊
                
    UNSUB       Client  Unsubscribe (or auto-unsubscribe) from subject

                        UNSUB <sid> [max_msgs]␍␊
                        
                        UNSUB 1␍␊
                        
                        UNSUB 1 5␍␊
                
    PING        Both    PING keep-alive message

                        PING␍␊
                        
    PONG        Both    PONG keep-alive response

                        PONG␍␊
                        
    +OK         Server  Acknowledges well-formed protocol message in verbose mode

                        +OK␍␊
    
    -ERR        Server  Indicates a protocol error. May cause client disconnect.

                        -ERR <error message>␍␊
                
With payloads    
    PUB         Client  Publish a message to a subject, with optional reply subject

                        PUB <subject> [reply-to] <#bytes>␍␊[payload]␍␊
                        
                        PUB FOO 11␍␊Hello NATS!␍␊
                        
                        PUB FRONT.DOOR JOKE.22 11␍␊Knock Knock␍␊
                        
                        PUB NOTIFY 0␍␊␍␊
                
    HPUB        Client  Publish a message to a subject including NATS headers, with optional reply subject

                        HPUB <subject> [reply-to] <#header bytes> <#total bytes>␍␊[headers]␍␊␍␊[payload]␍␊
                        
                        HPUB FOO 22 33␍␊NATS/1.0␍␊Bar: Baz␍␊␍␊Hello NATS!␍␊
                        
                        HPUB FRONT.DOOR JOKE.22 45 56␍␊NATS/1.0␍␊BREAKFAST: donut␍␊LUNCH: burger␍␊␍␊Knock Knock␍␊
                        
                        HPUB MORNING.MENU 47 51␍␊NATS/1.0␍␊BREAKFAST: donut␍␊BREAKFAST: eggs␍␊␍␊Yum!␍␊                    

    MSG         Server  Delivers a message payload to a subscriber

                        MSG <subject> <sid> [reply-to] <#bytes>␍␊
                        [payload]␍␊
                        
                        MSG FOO.BAR 9 11␍␊
                        Hello World␍␊
                        
                        MSG FOO.BAR 9 GREETING.34 11␍␊
                        Hello World␍␊
    
    HMSG        Server  Delivers a message payload to a subscriber with NATS headers

                        HMSG <subject> <sid> [reply-to] <#header bytes> <#total bytes>␍␊
                        [headers]␍␊␍␊
                        [payload]␍␊
        
                        HMSG FOO.BAR 34 45␍␊
                        NATS/1.0␍␊
                        FoodGroup: vegetable␍␊␍␊
                        Hello World␍␊
                        
                        HMSG FOO.BAR 9 BAZ.69 34 45␍␊
                        NATS/1.0␍␊
                        FoodGroup: vegetable␍␊␍␊
                        Hello World␍␊

Connecting
    https://docs.nats.io/using-nats/developer/connecting

    Ping/Pong Protocol
        https://docs.nats.io/using-nats/developer/connecting/pingpong

    Turning Off Echo'd Messages
        https://docs.nats.io/using-nats/developer/connecting/noecho

Request-Reply
    https://docs.nats.io/nats-concepts/core-nats/reqreply

Reply for "$JS.API.INFO" request
{
  "type" : "io.nats.jetstream.api.v1.account_info_response",
  "memory" : 0,
  "storage" : 0,
  "reserved_memory" : 0,
  "reserved_storage" : 0,
  "streams" : 0,
  "consumers" : 0,
  "limits" : {
    "max_memory" : -1,
    "max_storage" : -1,
    "max_streams" : -1,
    "max_consumers" : -1,
    "max_ack_pending" : -1,
    "memory_max_stream_bytes" : -1,
    "storage_max_stream_bytes" : -1,
    "max_bytes_required" : false
  },
  "api" : {
    "total" : 0,
    "errors" : 0
  }
}                                                        

Reply for ""$JS.API.STREAM.DELETE.NONEXISTINGSTREAM" request
{"type":"io.nats.jetstream.api.v1.stream_delete_response","error":{"code":404,"err_code":10059,"description":"stream not found"}}

{
    "type":"io.nats.jetstream.api.v1.stream_delete_response",
    "error": {
        "code":404,
        "err_code":10059, ??? optional
        "description":"stream not found"
    }
}
{"type":"io.nats.jetstream.api.v1.stream_create_response","error":{"code":400,"err_code":10056,"description":"stream name in subject does not match request"}}
{"type":"io.nats.jetstream.api.v1.stream_create_response","config":{"name":"EXISTINGSTREAM","subjects":["EXISTINGSTREAM"],"retention":"limits","max_consumers":-1,"max_msgs":-1,"max_bytes":-1,"max_age":0,"max_msgs_per_subject":-1,"max_msg_size":-1,"discard":"old","storage":"file","num_replicas":1,"duplicate_window":120000000000,"compression":"none","allow_direct":false,"mirror_direct":false,"sealed":false,"deny_delete":false,"deny_purge":false,"allow_rollup_hdrs":false,"consumer_limits":{}},"created":"2025-02-02T08:40:19.933368586Z","state":{"messages":0,"bytes":0,"first_seq":0,"first_ts":"0001-01-01T00:00:00Z","last_seq":0,"last_ts":"0001-01-01T00:00:00Z","consumer_count":0},"ts":"2025-02-02T08:40:19.936023057Z","did_create":true}


Good response:
{
  "type": "io.nats.jetstream.api.v1.stream_names_response",
  "total": 1,
  "offset": 0,
  "limit": 1024,
  "streams": [
    "KV_NATS"
  ]
}

Error response:
{
  "type": "io.nats.jetstream.api.v1.consumer_info_response",
  "error": {
    "code": 404,
    "err_code": 10059,
    "description": "stream not found"
  }
}

Example of APIs
    $JS.API.STREAM.CREATE.%s
    $JS.API.STREAM.UPDATE.%s
    $JS.API.STREAM.NAMES
    $JS.API.STREAM.LIST
    $JS.API.STREAM.INFO.%s
    $JS.API.STREAM.DELETE.%s
    $JS.API.STREAM.PURGE.%s
    $JS.API.STREAM.MSG.DELETE.%s
    $JS.API.STREAM.MSG.GET.%s
    $JS.API.STREAM.SNAPSHOT.%s
    $JS.API.STREAM.RESTORE.%s
    $JS.API.STREAM.PEER.REMOVE.%s
    $JS.API.STREAM.LEADER.STEPDOWN.%s


JetStream Configuration
    https://docs.nats.io/nats-concepts/jetstream/streams

    {"name":"EXISTINGSTREAM","retention":"limits","max_consumers":-1,"max_msgs":-1,"max_bytes":-1,"max_age":0,"max_msgs_per_subject":-1,"max_msg_size":-1,"discard":"old","storage":"file","num_replicas":1,"duplicate_window":120000000000,"compression":"none","allow_direct":false,"mirror_direct":false,"sealed":false,"deny_delete":false,"deny_purge":false,"allow_rollup_hdrs":false}
    

    
NATS design
    https://gitee.com/nats-io/nats-architecture-and-design/blob/main/adr/ADR-1.md
    

INFO
====
// ServerInfoV1 identifies remote servers.
type ServerInfoV1 struct {
	Name      string    `json:"name"`
	Host      string    `json:"host"`
	ID        string    `json:"id"`
	Cluster   string    `json:"cluster,omitempty"`
	Version   string    `json:"ver"`
	Seq       uint64    `json:"seq"`
	JetStream bool      `json:"jetstream"`
	Time      time.Time `json:"time"`
}

CONNECT
=======
// ClientInfoV1 is detailed information about the client forming a connection.
type ClientInfoV1 struct {
	Start      time.Time     `json:"start,omitempty"`
	Host       string        `json:"host,omitempty"`
	ID         uint64        `json:"id,omitempty"`
	Account    string        `json:"acc"`
	User       string        `json:"user,omitempty"`
	Name       string        `json:"name,omitempty"`
	Lang       string        `json:"lang,omitempty"`
	Version    string        `json:"ver,omitempty"`
	RTT        time.Duration `json:"rtt,omitempty"`
	Server     string        `json:"server,omitempty"`
	Cluster    string        `json:"cluster,omitempty"`
	Alternates []string      `json:"alts,omitempty"`
	Stop       time.Time     `json:"stop,omitempty"`
	Jwt        string        `json:"jwt,omitempty"`
	IssuerKey  string        `json:"issuer_key,omitempty"`
	NameTag    string        `json:"name_tag,omitempty"`
	Tags       []string      `json:"tags,omitempty"`
	Kind       string        `json:"kind,omitempty"`
	ClientType string        `json:"client_type,omitempty"`
}

https://docs.nats.io/nats-concepts/jetstream/streams
https://docs.nats.io/~gitbook/image?url=https%3A%2F%2F1487470910-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252F-LqMYcZML1bsXrN3Ezg0%252Fuploads%252Fgit-blob-dedcc17f082fa1e39497c54ed8191b6424ee7792%252Fstreams-and-consumers-75p.png%3Falt%3Dmedia&width=768&dpr=4&quality=100&sign=697e5d00&sv=2

Wildcards: 
    NATS supports the use of wildcards in subject subscriptions.

    The asterisk character (*) matches a single token at any level of the subject.

    The greater than symbol (>), also known as the full wildcard, matches one or more 
    tokens at the tail of a subject, and must be the last token. 
    The wildcarded subject foo.> will match foo.bar or foo.bar.baz.1, but not foo.

    Wildcards must be a separate token (foo.*.baz or foo.> are syntactically valid; 
    foo*.bar, f*o.b*r and foo> are not)

    For example, the wildcard subscriptions foo.*.quux and foo.> both match foo.bar.quux, 
    but only the latter matches foo.bar.baz. 
    
    With the full wildcard, it is also possible to express interest in every subject that 
    may exist in NATS: sub > 1, limited of course by authorization settings.


Create Ordered Consumer request (Go)
    {
        "stream_name":"foo",
        "config":
        {
            "name":"x8ypnsZiR8YiVV4k8bSKpD_1",
            "deliver_policy":"all",
            "ack_policy":"none",
            "replay_policy":"instant",
            "inactive_threshold":300000000000,
            "num_replicas":1,
            "mem_storage":true
        },
        "action":""
    }
    
    consumerName = "x8ypnsZiR8YiVV4k8bSKpD_1"
    
    "CONSUMER.CREATE.foo.x8ypnsZiR8YiVV4k8bSKpD_1"


PHP
    $JS.API.STREAM.CREATE.my_stream
    {
      "allow_rollup_hdrs" : true,
      "deny_delete" : true,
      "discard" : "old",
      "duplicate_window" : 0,
      "max_age" : 0,
      "max_consumers" : -1,
      "name" : "my_stream",
      "num_replicas" : 1,
      "retention" : "workqueue",
      "storage" : "file",
      "subjects" : [ "tester.greet", "tester.bye" ]
    }
    
    $stream->put('tester.greet', [ 'name' => 'oxidmod' ]);
    PUB tester.greet 18
    {"name":"oxidmod"}

PUB <subject> [reply-to] <#bytes>␍␊[payload]␍␊

MSG <subject> <sid> [reply-to] <#bytes>␍␊
[payload]␍␊

SUB <subject> [queue group] <sid>␍␊
UNSUB <sid> [max_msgs]␍␊


[DBG] 172.18.0.1:55834 - cid:8 - Client connection created
[TRC] 172.18.0.1:55834 - cid:8 - <<- [CONNECT {"verbose":false,"pedantic":false,"tls_required":false,"name":"","lang":"go","version":"1.39.0","protocol":1,"echo":true,"headers":true,"no_responders":true}]
[TRC] 172.18.0.1:55834 - cid:8 - <<- [PING]
[TRC] 172.18.0.1:55834 - cid:8 - ->> [PONG]
[TRC] 172.18.0.1:55834 - cid:8 - <<- [SUB _INBOX.IM9yo2v71htzEKPX8NuCaG.*  1]
[TRC] 172.18.0.1:55834 - cid:8 - <<- [PUB $JS.API.STREAM.CREATE.ORDERS _INBOX.IM9yo2v71htzEKPX8NuCaG.lfD22wGo 289]
[TRC] 172.18.0.1:55834 - cid:8 - <<- MSG_PAYLOAD: ["{\"name\":\"ORDERS\",\"subjects\":[\"orders.*\",\"items.*\"],\"retention\":\"limits\",\"max_consumers\":0,\"max_msgs\":0,\"max_bytes\":0,\"discard\":\"old\",\"max_age\":0,\"max_msgs_per_subject\":0,\"storage\":\"file\",\"num_replicas\":0,\"compression\":\"none\",\"allow_direct\":false,\"mirror_direct\":false,\"consumer_limits\":{}}"]
[TRC] 172.18.0.1:55834 - cid:8 - ->> [MSG _INBOX.IM9yo2v71htzEKPX8NuCaG.lfD22wGo 1 775]

[DBG] 172.18.0.1:55838 - cid:9 - Client connection created
[TRC] 172.18.0.1:55838 - cid:9 - <<- [CONNECT {"verbose":false,"pedantic":false,"tls_required":false,"name":"","lang":"go","version":"1.39.0","protocol":1,"echo":true,"headers":true,"no_responders":true}]
[TRC] 172.18.0.1:55838 - cid:9 - <<- [PING]
[TRC] 172.18.0.1:55838 - cid:9 - ->> [PONG]
[TRC] 172.18.0.1:55838 - cid:9 - <<- [SUB _INBOX.IM9yo2v71htzEKPX8NuCby.*  1]
[TRC] 172.18.0.1:55838 - cid:9 - <<- [PUB $JS.API.CONSUMER.CREATE.ORDERS _INBOX.IM9yo2v71htzEKPX8NuCby.XPjHN26o 173]
[TRC] 172.18.0.1:55838 - cid:9 - <<- MSG_PAYLOAD: ["{\"stream_name\":\"ORDERS\",\"config\":{\"deliver_policy\":\"all\",\"ack_policy\":\"none\",\"filter_subject\":\"orders.*\",\"replay_policy\":\"instant\",\"deliver_subject\":\"p.d\",\"num_replicas\":0}}"]
[TRC] JETSTREAM - <<- [SUB $JSC.CI.$G.ORDERS.OhcQIEBf  55]
[TRC] 172.18.0.1:55838 - cid:9 - ->> [MSG _INBOX.IM9yo2v71htzEKPX8NuCby.XPjHN26o 1 544]

[DBG] 172.18.0.1:55840 - cid:12 - Client connection created
[TRC] 172.18.0.1:55840 - cid:12 - <<- [CONNECT {"verbose":false,"pedantic":false,"tls_required":false,"name":"","lang":"go","version":"1.39.0","protocol":1,"echo":true,"headers":true,"no_responders":true}]
[TRC] 172.18.0.1:55840 - cid:12 - <<- [PING]
[TRC] 172.18.0.1:55840 - cid:12 - ->> [PONG]
[TRC] 172.18.0.1:55840 - cid:12 - <<- [SUB _INBOX.IM9yo2v71htzEKPX8NuCdg.*  1]
[TRC] 172.18.0.1:55840 - cid:12 - <<- [PUB orders.2 _INBOX.IM9yo2v71htzEKPX8NuCdg.Dk8ygm2K 7]
[TRC] 172.18.0.1:55840 - cid:12 - <<- MSG_PAYLOAD: ["ORDER-1"]
[TRC] 172.18.0.1:55840 - cid:12 - ->> [MSG _INBOX.IM9yo2v71htzEKPX8NuCdg.Dk8ygm2K 1 28]

[TRC] 172.18.0.1:55838 - cid:9 - <<- [SUB p.d  2]
[TRC] 172.18.0.1:55838 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.OhcQIEBf.1.1.1.1740469718563176932.8 7]
[TRC] 172.18.0.1:55838 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.OhcQIEBf.1.2.2.1740470023740600428.7 7]
[TRC] 172.18.0.1:55838 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.OhcQIEBf.1.3.3.1740470282717851701.6 7]
[TRC] 172.18.0.1:55838 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.OhcQIEBf.1.4.4.1740470329082079137.5 7]
[TRC] 172.18.0.1:55838 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.OhcQIEBf.1.5.5.1740550450526620140.4 7]
[TRC] 172.18.0.1:55838 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.OhcQIEBf.1.6.6.1740550835660778920.3 7]
[TRC] 172.18.0.1:55838 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.OhcQIEBf.1.7.7.1740551485585329260.2 7]
[TRC] 172.18.0.1:55838 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.OhcQIEBf.1.8.8.1740552436543701085.1 7]
[TRC] 172.18.0.1:55838 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.OhcQIEBf.1.9.9.1740552793162874229.0 7]
[TRC] 172.18.0.1:55838 - cid:9 - <<- [UNSUB 2 ]
[TRC] 172.18.0.1:55838 - cid:9 - <-> [DELSUB 2]
[TRC] 172.18.0.1:55838 - cid:9 - <<- [PING]
[TRC] 172.18.0.1:55838 - cid:9 - ->> [PONG]
[TRC] 172.18.0.1:55840 - cid:12 - <<- [UNSUB 1 ]
[TRC] 172.18.0.1:55840 - cid:12 - <-> [DELSUB 1]
[TRC] 172.18.0.1:55834 - cid:8 - <<- [UNSUB 1 ]
[TRC] 172.18.0.1:55834 - cid:8 - <-> [DELSUB 1]
[TRC] 172.18.0.1:55840 - cid:12 - <<- [PING]
[TRC] 172.18.0.1:55840 - cid:12 - ->> [PONG]
[TRC] 172.18.0.1:55834 - cid:8 - <<- [PING]
[TRC] 172.18.0.1:55834 - cid:8 - ->> [PONG]
[TRC] 172.18.0.1:55840 - cid:12 - <<- [PING]
[TRC] 172.18.0.1:55840 - cid:12 - ->> [PONG]
[TRC] 172.18.0.1:55834 - cid:8 - <<- [PING]
[TRC] 172.18.0.1:55834 - cid:8 - ->> [PONG]
[DBG] 172.18.0.1:55840 - cid:12 - Client connection closed: Client Closed
[DBG] 172.18.0.1:55834 - cid:8 - Client connection closed: Client Closed
[DBG] 172.18.0.1:55838 - cid:9 - Client connection closed: Client Closed
[TRC] 172.18.0.1:55838 - cid:9 - <-> [DELSUB 1]
[TRC] JETSTREAM - <-> [DELSUB 1]
[TRC] JETSTREAM - <-> [DELSUB 55]
[DBG] JETSTREAM - JetStream connection closed: Client Closed
[DBG] JETSTREAM - JetStream connection closed: Client Closed

====================================================================

PUB <subject> [reply-to] <#bytes>␍␊[payload]␍␊

MSG <subject> <sid> [reply-to] <#bytes>␍␊
[payload]␍␊

SUB <subject> [queue group] <sid>␍␊
UNSUB <sid> [max_msgs]␍␊

Connect 1
c->[SUB _INBOX.IM9yo2v71htzEKPX8NuCaG.*  1]

	Create Stream ORDERS
	c->[PUB $JS.API.STREAM.CREATE.ORDERS _INBOX.IM9yo2v71htzEKPX8NuCaG.lfD22wGo 289]
	s->[MSG _INBOX.IM9yo2v71htzEKPX8NuCaG.lfD22wGo 1 775]

Connect 2
c->[SUB _INBOX.IM9yo2v71htzEKPX8NuCby.*  1]

	Create Consumer ORDERS
	c->[PUB $JS.API.CONSUMER.CREATE.ORDERS _INBOX.IM9yo2v71htzEKPX8NuCby.XPjHN26o 173]
		MSG_PAYLOAD: 
			stream_name=ORDERS 
			deliver_subject=p.d
	s->[MSG _INBOX.IM9yo2v71htzEKPX8NuCby.XPjHN26o 1 544]

Connect 3
[SUB _INBOX.IM9yo2v71htzEKPX8NuCdg.*  1]

	Publish message
	c->[PUB orders.2 _INBOX.IM9yo2v71htzEKPX8NuCdg.Dk8ygm2K 7]
			MSG_PAYLOAD: ["ORDER-1"]
	s->[MSG _INBOX.IM9yo2v71htzEKPX8NuCdg.Dk8ygm2K 1 28]

Connect 2	
	Subscribe
	c->[SUB p.d  2] where p.d is deliver_subject of consumer
	
	Receive published mesage
	s->[MSG orders.2 2 $JS.ACK.ORDERS.OhcQIEBf.1.1.1.1740469718563176932.8 7]
	
    Unsubscribe
    c->[UNSUB 2 ]
    
    c<?>s[DELSUB 2]
    
==============================================================================
func TestJetStreamSubscriberLocalHost(t *testing.T) {

	snc := natsConn(t)
	defer snc.Drain()
	sjsc := jetStreamClient(t, snc)

	var err error

	const StreamName = "ORDERS"

	// Create a stream using the server directly.
	_, err = sjsc.AddStream(&nats.StreamConfig{Name: StreamName, Subjects: []string{"orders.*", "items.*"}})
	if err != nil {
		t.Fatalf("stream create failed: %v", err)
	}

	var deliver_subject = "DeliverSubject"

	cnc := natsConn(t)
	defer cnc.Drain()
	cjsc := jetStreamClient(t, cnc)

	var cinfo *nats.ConsumerInfo
	// Create a push based consumers.
	cinfo, err = cjsc.AddConsumer("ORDERS", &nats.ConsumerConfig{
		AckPolicy:      nats.AckNonePolicy,
		DeliverSubject: deliver_subject,
	})
	if err != nil {
		t.Fatalf("push consumer create failed: %v", err)
	}
	_ = cinfo

	pnc := natsConn(t)
	defer pnc.Drain()
	pjs := jetStreamClient(t, pnc)

	// Now make sure we can send to the stream from another account.
	toSend := 1
	for i := 0; i < toSend; i++ {
		if _, err := pjs.Publish("orders.2", []byte(fmt.Sprintf("ORDER-%d", i+1))); err != nil {
			t.Fatalf("Unexpected error publishing message %d: %v", i+1, err)
		}
	}

	var sub *nats.Subscription

	// Do push based consumer using a regular NATS subscription on the import subject.
	sub, err = cjsc.SubscribeSync( /*"orders.*"*/ "", nats.Bind(StreamName, cinfo.Name), nats.SkipConsumerLookup(), nats.DeliverSubject(deliver_subject), nats.AckNone(), nats.MaxDeliver(1))
	if err != nil {
		t.Fatalf("Unexpected error: %v", err)
	}

	// Can also ack from the regular NATS subscription via the imported subject.
	for i := 0; i < toSend; i++ {
		var msg *nats.Msg
		msg, err := sub.NextMsg(100 * time.Millisecond)
		if err != nil {
			t.Fatalf("Unexpected error: %v", err)
		}
		_ = msg
	}
	return
}

func natsConn(t *testing.T) *nats.Conn {
	t.Helper()
	nc, err := nats.Connect(nats.DefaultURL)
	if err != nil {
		t.Fatalf("Unexpected error: %v", err)
	}
	return nc
}

func jetStreamClient(t *testing.T, nc *nats.Conn) nats.JetStreamContext {
	t.Helper()
	js, err := nc.JetStream(nats.MaxWait(10 * time.Second))
	if err != nil {
		t.Fatalf("Unexpected error getting JetStream context: %v", err)
	}
	return js
}


[DBG] 172.18.0.1:54234 - cid:8 - Client connection created
[TRC] 172.18.0.1:54234 - cid:8 - <<- [CONNECT {"verbose":false,"pedantic":false,"tls_required":false,"name":"","lang":"go","version":"1.39.0","protocol":1,"echo":true,"headers":true,"no_responders":true}]
[TRC] 172.18.0.1:54234 - cid:8 - <<- [PING]
[TRC] 172.18.0.1:54234 - cid:8 - ->> [PONG]
[TRC] 172.18.0.1:54234 - cid:8 - <<- [SUB _INBOX.hgBCpnDk7h59s44tAQ6zqK.*  1]
[TRC] 172.18.0.1:54234 - cid:8 - <<- [PUB $JS.API.STREAM.CREATE.ORDERS _INBOX.hgBCpnDk7h59s44tAQ6zqK.0pmMozYa 289]
[TRC] 172.18.0.1:54234 - cid:8 - <<- MSG_PAYLOAD: ["{\"name\":\"ORDERS\",\"subjects\":[\"orders.*\",\"items.*\"],\"retention\":\"limits\",\"max_consumers\":0,\"max_msgs\":0,\"max_bytes\":0,\"discard\":\"old\",\"max_age\":0,\"max_msgs_per_subject\":0,\"storage\":\"file\",\"num_replicas\":0,\"compression\":\"none\",\"allow_direct\":false,\"mirror_direct\":false,\"consumer_limits\":{}}"]
[TRC] 172.18.0.1:54234 - cid:8 - ->> [MSG _INBOX.hgBCpnDk7h59s44tAQ6zqK.0pmMozYa 1 777]
[DBG] 172.18.0.1:54250 - cid:9 - Client connection created
[TRC] 172.18.0.1:54250 - cid:9 - <<- [CONNECT {"verbose":false,"pedantic":false,"tls_required":false,"name":"","lang":"go","version":"1.39.0","protocol":1,"echo":true,"headers":true,"no_responders":true}]
[TRC] 172.18.0.1:54250 - cid:9 - <<- [PING]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [PONG]
[TRC] 172.18.0.1:54250 - cid:9 - <<- [SUB _INBOX.hgBCpnDk7h59s44tAQ6zr2.*  1]
[TRC] 172.18.0.1:54250 - cid:9 - <<- [PUB $JS.API.CONSUMER.CREATE.ORDERS _INBOX.hgBCpnDk7h59s44tAQ6zr2.F1lHulsf 156]
[TRC] 172.18.0.1:54250 - cid:9 - <<- MSG_PAYLOAD: ["{\"stream_name\":\"ORDERS\",\"config\":{\"deliver_policy\":\"all\",\"ack_policy\":\"none\",\"replay_policy\":\"instant\",\"deliver_subject\":\"DeliverSubject\",\"num_replicas\":0}}"]
[TRC] JETSTREAM - <<- [SUB $JSC.CI.$G.ORDERS.LZcSnug6  55]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG _INBOX.hgBCpnDk7h59s44tAQ6zr2.F1lHulsf 1 528]
[DBG] 172.18.0.1:54266 - cid:12 - Client connection created
[TRC] 172.18.0.1:54266 - cid:12 - <<- [CONNECT {"verbose":false,"pedantic":false,"tls_required":false,"name":"","lang":"go","version":"1.39.0","protocol":1,"echo":true,"headers":true,"no_responders":true}]
[TRC] 172.18.0.1:54266 - cid:12 - <<- [PING]
[TRC] 172.18.0.1:54266 - cid:12 - ->> [PONG]
[TRC] 172.18.0.1:54266 - cid:12 - <<- [SUB _INBOX.hgBCpnDk7h59s44tAQ6zrk.*  1]
[TRC] 172.18.0.1:54266 - cid:12 - <<- [PUB orders.2 _INBOX.hgBCpnDk7h59s44tAQ6zrk.Qmkr1L7z 7]
[TRC] 172.18.0.1:54266 - cid:12 - <<- MSG_PAYLOAD: ["ORDER-1"]
[TRC] 172.18.0.1:54266 - cid:12 - ->> [MSG _INBOX.hgBCpnDk7h59s44tAQ6zrk.Qmkr1L7z 1 29]
[TRC] 172.18.0.1:54250 - cid:9 - <<- [SUB DeliverSubject  2]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.1.1.1740469718563176932.13 7]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.2.2.1740470023740600428.12 7]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.3.3.1740470282717851701.11 7]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.4.4.1740470329082079137.10 7]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.5.5.1740550450526620140.9 7]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.6.6.1740550835660778920.8 7]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.7.7.1740551485585329260.7 7]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.8.8.1740552436543701085.6 7]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.9.9.1740552793162874229.5 7]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.10.10.1740555295324803843.4 7]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.11.11.1740555769018565940.3 7]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.12.12.1740556113548897816.2 7]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.13.13.1740556502929456973.1 7]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [MSG orders.2 2 $JS.ACK.ORDERS.LZcSnug6.1.14.14.1740556767974263305.0 7]
[TRC] 172.18.0.1:54234 - cid:8 - <<- [UNSUB 1 ]
[TRC] 172.18.0.1:54266 - cid:12 - <<- [UNSUB 1 ]
[TRC] 172.18.0.1:54234 - cid:8 - <-> [DELSUB 1]
[TRC] 172.18.0.1:54266 - cid:12 - <-> [DELSUB 1]
[TRC] 172.18.0.1:54234 - cid:8 - <<- [PING]
[TRC] 172.18.0.1:54234 - cid:8 - ->> [PONG]
[TRC] 172.18.0.1:54266 - cid:12 - <<- [PING]
[TRC] 172.18.0.1:54266 - cid:12 - ->> [PONG]
[TRC] 172.18.0.1:54250 - cid:9 - <<- [UNSUB 2 ]
[TRC] 172.18.0.1:54250 - cid:9 - <-> [DELSUB 2]
[TRC] 172.18.0.1:54250 - cid:9 - <<- [PING]
[TRC] 172.18.0.1:54250 - cid:9 - ->> [PONG]
[TRC] 172.18.0.1:54234 - cid:8 - <<- [PING]
[TRC] 172.18.0.1:54234 - cid:8 - ->> [PONG]
[TRC] 172.18.0.1:54266 - cid:12 - <<- [PING]
[TRC] 172.18.0.1:54266 - cid:12 - ->> [PONG]
[DBG] 172.18.0.1:54234 - cid:8 - Client connection closed: Client Closed
[DBG] 172.18.0.1:54266 - cid:12 - Client connection closed: Client Closed
[DBG] 172.18.0.1:54250 - cid:9 - Client connection closed: Client Closed
[TRC] 172.18.0.1:54250 - cid:9 - <-> [DELSUB 1]
[TRC] JETSTREAM - <-> [DELSUB 1]
[TRC] JETSTREAM - <-> [DELSUB 55]
[DBG] JETSTREAM - JetStream connection closed: Client Closed
[DBG] JETSTREAM - JetStream connection closed: Client Closed
